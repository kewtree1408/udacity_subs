2)
Введение.
Начнем введение в курс сетей с обзора истории возникновения интернета и принципов его проектирования. Сегодня сети - это электрическая смесь из теории и практики в большей части из-за того, что ранняя архитектура интернета начиналась просто с целей и предоставляла гибкие подходы к достижению этих целей. 
-- Со всей этой гибкостью, как скоро мы увидим процесс IPv6?
-- Только в ваших снах. :D

Краткая история Интернета.
В этой лекции мы кратко осветим историю интернета. Интернет уходит корнями в ARPA Net, которая была задумана в 1966 для соединения вместе двух больших академических компьютеров. Первые узлы сети ARPA Net - UCLA, SRI, UCSB и Utah - вышли в интернет в 1969 году. Через некоторое время Национальная физическая лаборатория в UK тоже вошла в интернет. К 1971 году, у сети ARPANet было около 20 узлов, и так образовался первый host-to-host протокол. Это было 2 перекрестные ссылки и скорость между ними была 50 кбит/с. Вот грубый набросок сети ARPANet, нарисованный Larry Robetrs в позднем 1960м году. Вы видите 4 исходных узла, а также других известных игроков, таких как Berkeley. MAC-проект, MIT, BBN, Harvard, Carnegie-Mellon, Michigan, Illinois, Dartmouth, Standford и т.д. Вот так выглядела ARPANet в далеком 1960м. А так выглядит сеть ARPANet в июле 1974 года. Как видите, теперь диаграмма, помимо нескольких дополнительно присоединившихся сетей, также включает машины, соединенные друг с другом внутри университетов. А здесь мы видим соединение между ArpaNet & MPLnet. Конечно, ARPANet не была единственной сетью. В тоже время существовали и другие сети. Sat Net работала через спутник. Здесь были и пакеты радио сетей, и были локальные Ethernet сети. Работа над ними началась в 1973 по замене старых сетевых протоколов на TCP/IP, где IP - межсетевой протокол и TCP (Transmission Control Protocol) - протокол управления передачей данных. TCP/IP был в конечном счете стандартизирован с 1978 по 1981 и включен в Берклевский UNIX в 1981. И 1го января 1983 года - стал официальным днем интернета, когда arpanet-сеть стала работать через TCP/IP. В наши дни Интернет продолжает расти, но число компьютером начало стремительно расти с середины 90х. Как видим на графике, где-то в Августе 1995 года было около 10 миллионов хостов в интернете и в течение 5 лет их количество только возрастало. Хостов стало более 100 миллионов. В течение этого периода интернет сталкнулся с несколькими техническими рубежами (этапами). В 1982. Интерет увидел внеднение DNS, которая заменила файл host.txt, который содержал названия всех машин в мире и с распределенной системой поиска доменных имен. 1988 увидел внедрение TCP Congestion Control (с контролем от перегрузки), после того, как сеть пострадала от серии крахов из-за перегрузки. 1989 увидел NSF-сети и BGP (Border Gateway Protocol - протокол динамической маршрутизации) - протокола внутридоменной маршрутизации. Включая поддержку политики маршрутизации. С другой стороны, 90ые увидели множество новых приложений. Приблизительно в 1992, мы увидели потоковые медиа, включающие аудио и видео. Web не скоро после 1993, позволил пользователям просматривать петли из гипертекста.
В декабре 1995 года появляется первый основной поисковик - Altavista.
Peep-to-peer протокол и приложения, включающие шаринг файлов начинают появляться в 2000. 

Текущие и будущие проблемы (проблемы и растущие боли).
Сейчас интернет испытывает значительные проблемы и растущую боль. Над некоторыми проблемами стоит задуматься, так как многие из них порождают интересные исследовательские задачи, некоторые из которых мы проработали в данном материале. Одна из главных проблем - не хватает адресов. Текущая версия интернет протокола IPv4, использует 32битные адреса. Это означает, что IPv4 интернет использует только 2^32 IP адресов. Или около 4 миллиардов IP адресов. Более того, эти IP адреса должны быть выделены иерархично. И текущее пространство для IP адресов выделено не эффективно. Например, для Массачусетского технологического института выделено 1256 адресов из всего адресного пространства. Другая проблема - контроль за перегрузкой.
Контролировать перегрузку нужно, чтобы выдержать предполагаемые нагрузки по загруженности. Но одна из проблем сегодняшних алгоритмов по контролю нагрузки в том, что у них недостаточно динамические диапазоны. Они недостаточно хорошо работают с очень медленными и слоеными беспроводными сетями и они не работают на больших скоростях с интерконтинентальными путями. 
Сейчас некоторые решения существуют, но изменение текущей схемы приведет к трудностям, а все внедренные решения сильно зависят между собой. Внедрение в некотором смысле потребует нескольких консенсусов.
от некоторых заболеваний, включающих отсутствие безопасности, простота конфигурирования, плохой сходимостью (?) и недетерминированностью. Но он вроде работает, и в некотором смысле, является наиболее критичным местом для инфраструктуры интернета, т.к. он похож на клей, который держит всех интернет провайдеров вместе.
Еще одна важная проблема на сегодняшний день - это интернет-безопасность.
Мы знаем про алгоритмы шифрования и аутентификации, но мы до сих пор не применяем их на практике. Но мы не плохи в ключевых механизмах, таких как создание безопасных приложений и защищенных конфигураций.
Пятая важная проблема - отказ в обслуживании. И интернет действиетльно хорошо выполняет работу, связанную с доставкой пакетов до пункта назначения. Даже если пункт назначения не запрашивал такие пакеты. Именно поэтому злоумышленнику очень просто взять и перегрузить сервера или сетевые каналы, чтобы не допустить нормальной работы сервиса жертвы.
Атаки связанные с отказом обслуживания особенно частое явление в Интернетах.
Так что сейчас все эти проблемы во всех этапах требуют изменений в базовой инфраструктуре. А изменения в базовой инфраструктуре - действительно очень сложны. И даже не понятно, какие процессы нужно изменить для достижения консенсуса. Поэтому мы разработали этот курс, в котором рассмотрим каждую из этих проблемных областей. Также рассмотрим различные решения этих проблем и их пути реализации в новых протоколах и технологиях. В более поздних астях курса мы поговорим о новой технологии, названной software defined networking (SDN - программно-конфигурируемая сеть). С помощью этой технологии проще решаются некоторые из этих проблем
с помощью использования новых технологий, протоколов и других систем управления этими вопросами.

Принципы проектирования архитектуры.
В этой лекции мы поговорим о первоначальных принципах проектирования Интернета. Эти принципы обсуждались в статье "Философия проектирования DARPA-интернет-протокола" (Design Philosophy DARPA IP: http://ccr.sigcomm.org/archive/1995/jan95/ccr-9501-clark.pdf) Дейвом Кларком в 1988. Статья содержит множество важных уроков, мы пройдемся по многим из них и рассмотрим существующие решения. До того как мы перепрыгнем к деталям, давайте поговорим о высокоуровневых нотациях. Одна из важнейших концептуальных нотаций - это то, что принципы и приоритеты были сконструированы для определенных типов сетей. 
С развитием интернета мы чувствуем некоторые нарастращие боли в некоторых из ранних решений. В прошлом уроке мы говорили о количестве проблем и о будущих проблемах Интернета. И принимая во внимание многие из этих проблем, мы видим, что все они - результат первоначальных методов проектирования.
Сейчас нельзя сказать, что некоторые из выбранных решений являются правильными или нет. Дело в том что они просто отражают природу нашего понимания сетей, а также созданные окружения и ограничения до сих пор существуют в некоторых конкретных сетях.
Сейчас само собой сказано, что некоторые из технических уроков из исходных принципов получились довольно вневременными. Одна из концепций - пакетная коммутация, которую мы обсудим в этом уроке. И другая - понятие судьба обмена (fate sharing), или мягкого состояния (soft state), которые мы обсудим в последующих уроках нашего курса.

Цель.
Фундаментальная конструктивная цель интернета - мультиплексирование загрузки существующих связанных сетей. Рассмотрим 2 важных момента в этой цели. Первая - мультиплексирование (уплотнение) или обмен (sharing). Одна из фундаментальных трудностей то, что интернет-технологиям нужны решения для общего использования единого канала передачи информации. Другая важная часть этой фундаментальной цели - связанность существующих сетей. Из них следует 2 подпроблемы с двумя важными решениями. Статистическое мультиплексирование или пакетная коммутация была придумала для решения проблема обмена данных (sharing). И узкое место было в момент проектирования решения проблем связанных сетей (interconnecting networks). Давайте поговорим о каждой из проблем прямо сейчас. В свою очередь  поговорим о пакетной коммутации (packing switching).

Пакетная коммутация.
В коммутируемых пакетах (packet switching), информация для пересылающего траффика содержит внутри адрес назначения каждой датаграммы или пакета. Похоже на то, как вы пишите письмо и указываете пункт назначения, куда это письмо должно быть отправлено, и это письмо должно придти через множественные промежуточные почтовые отделения на маршруте к получателю. Пакетное коммутирование работает точно также. Но тут нет ранее установленной структуры. И в этой схеме очень мало допущений сделанных на уровне обслуживания, которые приходятся на сетевых провайдеров. 
Это допущение про уровень обслуживания сетевых провайдеров иногда называется лучшим усилием. Так как же на самом деле внутри пакетных свитчей происходит обмен. А так же как когда вы посылаете письмо. Много отправителей могут посылать данные по той же сети в одно и тоже время, эффективно обмениваясь ресурсами по сетям. Похожее явление возникает в пакетной коммутации (packet switching), когда множество отправителей посылают сетевой траффик или пакеты через одинаковое множество общих сетевых ссылок. Противоположным примером являются телефонные сети. Когда вы делаете телефонный звонок, ресурсы по пути вежду вами и предназначенным получателем распределяются до тех пор, пока телефонное соединение не завершится. Режим переключения, который традиционно используется в телефонных сетях, назвается канальной коммутацией (circuit switching), когда протокол сигнализации устанавливает полный путь вне диапазона. Такая нотация пакетной коммутации (packet switching) и статистического мультиплексирования позволяет нескольким пользователям обмениваться ресурсами в одной и тоже время - была по настоящему революционной. И это одна из нотаций, которая всё еще сохраняется при описании принципов интернета. Сейчас, преимущественно используется статистическое мультиплексирование в ссылках и сетях, которое означает, что сигнал от отправителя никогда не бывает занят. Но есть и недостатки в этом методе, такие как переменные задержки или потенциальная потеря или даже падение (уронили пакетик при доставке :D) пакетов. В протовоположность, канальная коммутация (circuit switching), которая обеспечивает контроль за ресурсами, улучшенный учет и резервирование ресурсов и возможность закрепелние путей между отправителем и получателем. Пакетное коммутирование способно разделять ресурсы и его свойства устойчивости соединения потенциально лучше.

